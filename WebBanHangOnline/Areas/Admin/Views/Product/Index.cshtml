@model List<WebBanHangOnline.Models.TbProduct>
@using System.Globalization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList.Mvc.Core;
@{
    ViewData["Title"] = "Danh sách sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<!--Aside Body-->
@section search {
    <!-- Search -->
    @*render search partial view*@
    @{
        await Html.RenderPartialAsync("SearchPartial");
    }
    <!-- /Search -->
}

@{
    CultureInfo viVN = new CultureInfo("vi-VN");
}

<!-- Main content -->
<section id="ListCategory" class="content flex-grow-1" style="height:100%">
    <div class="card" style="height:100%">
        <div class="card-header d-flex justify-content-between">
            <h2 class="card-title"><strong>@ViewData["Title"]</strong></h2>

            <div class="card-tools ">
                <a href="/admin/product/add_mvc" class="btn btn-primary">Thêm mới</a>
                <a class="btn btn-danger text-white" id="btnDeleteAll" onclick="deleteChecked()">Xóa</a>
            </div>
        </div>
        <div class="table-responsive text-nowrap flex-grow-1">
            <table class="table ">
                <thead>
                <tr>
                    <th>
                    <input type="checkbox" class="form-switch-md" id="select-all" onchange="selectAll()" style="transform: scale(1.5)" />
                    <th>STT</th>
                    <th>Hình ảnh</th>
                    <th>Tên sản phẩm</th>
                    <th>
                            <a href=" javascript:void(0)" onclick="sortByCategory()" class="text-black">
                            Danh mục
                        </a>
                    </th>
                    <th>Số lượng</th>
                    <th>Gía</th>
                    <th>Hiển thị</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody id="list-product" class="table-border-bottom-0">
                @if (Model != null)
                {
                    var i = 1;
                    foreach (var item in @Model)
                    {
                        <tr id="trow_@item.Id">
                            <td>
                                <input type="checkbox" class="check-all" style="transform: scale(1.5)" value="@item.Id" id="check_@item.Id" />
                            </td>
                            <td class="stt">@i</td>
                            <td><img src="@item.ImageUrl" style="width:50px" /></td>
                            <td>@item.Title</td>
                            <td>
                                @if (item.tbProductCategory != null)
                                {
                                    @item.tbProductCategory.Title
                                }
                            </td>
                            <td>@item.Quantity</td>
                                
                                <td>@item.Price.ToString("c", viVN)</td>
                            <td class="">
                                @if (item.IsActive)
                                {
                                    <a href="javascript:void(0)" onclick="changeStatus('@(item.Id)')">
                                        <i id="isActive_@item.Id" class='bx bx-check-circle text-success' style="transform: scale(1.5)"></i>
                                    </a>
                                }
                                else
                                {
                                    <a href="javascript:void(0)" onclick="changeStatus('@(item.Id)')">
                                        <i id="isActive_@item.Id" class='bx bx-x-circle text-danger' style="transform: scale(1.5)"></i>
                                    </a>
                                }
                            </td>
                            <td class="d-flex gap-2">
                                <a class="btn btn-warning" asp-controller="Product" asp-action="Edit_Mvc" asp-route-Id="@item.Id"><i class="bx bx-edit-alt me-1"></i>Sửa</a>
                                <a href="javascript:void(0)" class="btn btn-danger" onclick="deleteProduct('@(item.Id)')">
                                    <i class="bx bx-trash me-1"></i> Xóa
                                </a>
                            </td>
                        </tr>
                        i++;

                    }
                }
                else
                {
                    <tr>
                        <td style="border:0" colspan="4">Không có danh mục</td>
                    </tr>
                }
                </tbody>

            </table>

        </div>
        @* @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
        {
            MaximumPageNumbersToDisplay = 2,
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" },

        }) *@
    </div>
</section>
<!-- /.content -->

<!--confirm Delete Modal-->
@{
    await Html.RenderPartialAsync("ConfirmDeleteModal");
}

<!--confirm delete checked modal-->
@{
    await Html.RenderPartialAsync("ConfirmDeleteCheckedModal");
}

@section scripts {
    @{
        <partial name="_ValidationScriptsPartial"/>
    }
    <script>
        $(document).ready(() => {
            $('input[name="searchStr"]').keydown(function (event) {
                if (event.keyCode === 13) { // Phím Enter
                    Search(); // Gọi hàm Search
                }
            });

            tinymce.init({
                selector: '#Detail',
                plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount linkchecker',
                toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table | align lineheight | numlist bullist indent outdent | emoticons charmap | removeformat',
            });
        });



        function deleteChecked() {
            $(".check-all").each(function (index) {
                if ($(this).is(":checked")) {
                    deleteCategory($(this).val());
                }
            });
        }

        function changeStatus(id) {
            $.ajax({
                type: 'post',
                url: '/Admin/product/changeStatus',
                data: {
                    Id: id
                },
                success: function (result) {
                    if (result.isActive == true) {
                        $("#isActive_" + result.id).removeClass("text-danger");
                        $("#isActive_" + result.id).removeClass("bx-x-circle");
                        $("#isActive_" + result.id).addClass("bx-check-circle");
                        $("#isActive_" + result.id).addClass("text-success");
                    }
                    else if (result.isActive == false) {
                        $("#isActive_" + result.id).removeClass("text-success");
                        $("#isActive_" + result.id).removeClass("bx-check-circle");
                        $("#isActive_" + result.id).addClass("text-danger");
                        $("#isActive_" + result.id).addClass("bx-x-circle");
                    }
                }
            })
        }

        function selectAll() {
            var isCheck = $("#select-all").is(":checked");
            if (isCheck) {
                $(".check-all").prop("checked", true);
            }
            else {
                $(".check-all").prop("checked", false);
            }
        }

        function deleteProduct(id) {
            $('#confirmDeleteModal').modal('show');

            $(document).on('click', '#confirmDelete', function () {
                handleDeleteProduct(id);
                $('#confirmDeleteModal').modal('hide');
            });
        }

        function deleteChecked() {
            $('#confirmDeleteCheckedModal').modal('show');
            var arrId = new Array();

            $(document).on('click', '#confirmDeleteCheckedModal', function () {
                var checkedBoxes = $('.check-all').filter(':checked');
                checkedBoxes.each(function () {
                    arrId.push($(this).val());
                })
                handleDeleteCheckedProduct(arrId);
                $('#confirmDeleteCheckedModal').modal('hide');
            });
        }

        function handleDeleteProduct(id) {
            $.ajax({
                type: 'delete',
                url: '/product/delete',
                data: {
                    Id: id
                },
                success: function (data) {
                    //location.reload();
                    //toastr.success('Xóa sản phẩm thành công');
                    Search();
                    
                },
                error: function (error) {
                    consol.log(error);
                }
            });
        }

        function handleDeleteCheckedProduct(id) {
            $.ajax({
                type: 'delete',
                url: '/product/deleterange',
                data: {
                    listId : id
                },
                success: function (data) {
                    //location.reload();
                    //toastr.success('Xóa sản phẩm thành công');
                    Search();
                    
                },
                error: function (error) {
                    consol.log(error);
                }
            });
        }
        


        function Search () {
            let searchStr = $('input[name="searchStr"]').val();
            $.ajax({
                type: 'get',
                url: '/product/search',
                data: {
                    searchStr: searchStr
                },
                success: function (data) {
                    if (data.length > 0) {
                        LoadData(data);
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            });
        };

        function LoadData(data) {
            console.log(data);
            let i = 1;
            $('#list-product').empty();
            data.map((item) => {
                let r = `
                    <tr id="trow_${item.Id}">
                        <td>
                            <input type="checkbox" 
                                    class="check-all" style="transform:scale(1.5)" 
                                    value="${item.id}" id="check_${item.id}" />
                        </td>
                        <td class="stt">${i}</td>
                        <td><img src="${item.imageUrl}" style="width:50px" /></td>
                        <td>${item.title}</td>
                        <td>
                            ${item.tbProductCategory.title}
                        </td>
                        <td>${item.quantity}</td>
                                    <td>${item.price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}</td>
                        <td class="">
                            ${item.isActive ?
                                `<a href= "javascript:void(0)" onclick = "changeStatus('${item.id}')" >
                                    <i id="isActive_${item.id}" class='bx bx-check-circle text-success' style = "transform: scale(1.5)" > </i>
                                </a>`
                                :
                                `<a href="javascript:void(0)" onclick = "changeStatus('${item.id}')" >
                                    <i id="isActive_${item.id}" class='bx bx-x-circle text-danger' style = "transform: scale(1.5)" > </i>
                                </a>`
                            }
                        </td>
                        <td class="d-flex gap-2">
                            <a class="btn btn-warning" asp-controller="Product" asp-action="Edit_Mvc" asp-route-Id="${item.id}"><i class="bx bx-edit-alt me-1"></i>Sửa</a>
                            <a href="javascript:void(0)" class="btn btn-danger" onclick="deleteProduct('${item.id}')">
                                <i class="bx bx-trash me-1"></i> Xóa
                            </a>
                        </td>
                    </tr>
                `;

                i++;
                $('#list-product').append(r);
            });
        }

        function sortByCategory(){
            $.ajax({
                type: 'get',
                url: '/product/sortbycategory',
                success: function (data) {
                    if (data.length > 0) {
                        LoadData(data);
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

        // var controllerName = '@ViewBag.ControllerName';
        // $(".menu-item").each(() => {
        //     $(this).removeClass("active");
        // });
        // $("#" + controllerName).addClass("active");

    </script>
}

@* @section scripts {
    <script>
        $(document).ready(() => {

        });




        // Hàm thêm danh mục khi ấn nút "Thêm danh mục jquery"
        // Lấy các giá trị trong input và gửi tới controller thông qua ajax
        // Thêm đối tượng trả về vào table
        $("#add-category").click(() => {
            var id = $("#idCategory").val();
            if (id = "") {
                $.ajax({
                    type: 'POST',
                    url: '/add-jquery',
                    data: {
                        Title: $("#Title").val(),
                        Description: $("#Description").val(),
                        Position: $("#Position").val(),
                        SeoTitle: $("#SeoTitle").val(),
                        SeoDescription: $("#SeoDescription").val(),
                        SeoKeyWords: $("#SeoKeyWords").val()
                    },
                    success: function (result) {
                        if (result != null) {
                            // đóng modal
                            $("#category-info").modal('hide');

                            let lastRow = parseInt($("#list-category tr:last-child td:first-child").text());
                            if (isNaN(lastRow)) lastRow = 0;
                            lastRow++;
                            // chạy hàm load
                            let r =
                                `<tr id="trow_${result.id}">
                                                <td class="stt">${lastRow}</td>
                                                <td>${result.title}</td>
                                                <td>${result.position}</td>
                                                <td>
                                                    <div class="dropdown">
                                                        <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                                            <i class="bx bx-dots-vertical-rounded"></i>
                                                        </button>
                                                        <div class="dropdown-menu">
                                                                    <a class="dropdown-item" asp-controller="category" asp-action="edit" asp-route-Id="${result.id}">
                                                                <i class="bx bx-edit-alt me-1"></i>
                                                                Sửa
                                                            </a>
                                                                    <a class="dropdown-item" asp-controller="category" asp-action="delete" asp-route-Id="${result.id}">
                                                                <i class="bx bx-trash me-1"></i>
                                                                Xóa
                                                            </a>
                                                                <a data-id="${result.id}" class="dropdown-item" onclick="deleted('${result.id}')">
                                                                <i class="bx bx-trash me-1"></i>
                                                                Xóa Jquery
                                                            </a>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>`;
                            $("#list-category").append(r);
                        }
                    },
                    error: function () { },
                });
            }
            else {
                $.ajax({
                    type: 'POST',
                    url: '/editcategoryajax',
                    data: {
                        Id: $("#idCategory").val(),
                        Title: $("#Title").val(),
                        Description: $("#Description").val(),
                        Position: $("#Position").val(),
                        SeoTitle: $("#SeoTitle").val(),
                        SeoDescription: $("#SeoDescription").val(),
                        SeoKeyWords: $("#SeoKeyWords").val()
                    },
                    success: function (result) {
                        $("#category-info").modal('hide');
                        LoadData();
                    },
                    error: function (erro) { },
                })
            }

        });

        // Hàm xóa danh mục
        // Sau khi xóa danh mục thì cập nhật lại cột STT
        function deleteCategory(id) {
            $.ajax({
                type: 'post',
                url: '/test-jquery',
                data: { id: id },
                success: function (result) {
                    if (result != null) {
                        $('#trow_' + id).remove();
                        $(".stt").each(function (index) {
                            $(this).text(index + 1);
                        });
                    }
                },
                error: function () { },

            });
        }

        // hàm Load lại toàn bộ thông tin trong database
        function LoadData() {
            // xóa danh sách nhiệm vụ cũ
            $("#list-category").empty();
            // gửi request
            $.ajax({
                type: 'POST',
                url: '/loaddata',
                success: function (result) {
                    if (result.length > 0) {
                        let i = 1;
                        result.map((item) => {
                            let r =
                                `<tr id="trow_${item.id}">
                                            <td class="stt">${i}</td>
                                            <td>${item.title}</td>
                                            <td>${item.position}</td>
                                            <td>
                                                <div class="dropdown">
                                                    <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                                        <i class="bx bx-dots-vertical-rounded"></i>
                                                    </button>
                                                    <div class="dropdown-menu">
                                                        <a class="dropdown-item" asp-controller="category" asp-action="edit" asp-route-Id="${item.id}">
                                                            <i class="bx bx-edit-alt me-1"></i>
                                                            Sửa
                                                        </a>
                                                        <a class="dropdown-item" asp-controller="category" asp-action="delete" asp-route-Id="${item.id}">
                                                            <i class="bx bx-trash me-1"></i>
                                                            Xóa
                                                        </a>
                                                        <a data-id="${item.id}" class="dropdown-item" onclick="deleted('${item.id}')">
                                                            <i class="bx bx-trash me-1"></i>
                                                            Xóa Jquery
                                                        </a>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>`;
                            $("#list-category").append(r);
                            i++;
                        });
                    }

                },
                error: function (error) {
                    let r = `<h4>Không có nhiệm vụ</h4>`
                    $("#list-category").append(r);

                }
            });
        }

        // Hàm xử lý sự kiện khi ấn nút Edit Ajax
        function editCategoryAjax(id) {
            $.ajax({
                type: 'get',
                url: '/editcategoryajax',
                data: { id: id },
                success: function (result) {
                    alert(result.title);
                    RenderModalUpdate(result);
                },
            });

        }

        // Hàm xử lý sự kiện hide modal
        // Sau khi hide modal thì xóa thông tin trong form
        $("#category-info").on("hide.bs.modal", () => {
            ClearForm();
        });

        // Hàm xóa thông tin form
        function ClearForm() {
            $("#Title").val("");
            $("#Description").val("");
            $("#Position").val("");
            $("#SeoTitle").val("");
            $("#SeoDescription").val("");
            $("#SeoKeyWords").val("");
        }

        function RenderModalUpdate(result) {
            $("#idCategory").val(result.id);
            $("#Title").val(result.title);
            $("#Description").val(result.description);
            $("#Position").val(result.position);
            $("#SeoTitle").val(result.seoTitle);
            $("#SeoDescription").val(result.seoDescription);
            $("#SeoKeyWords").val(result.seoKeyWords);
            $("#category-info").modal('show');
        }


    </script>
}
 *@